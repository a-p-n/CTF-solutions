from z3 import *
from Crypto.Util.number import long_to_bytes as l2b,isPrime

pkey = (150953688, 373824666550208932851344358703053061405262438259996622188837935528607451817812480600479188884096072016823491996056842120586016323642383543231913508464973502962030059403443181467594283936168384790367731793997013711256520780338341018619858240958105689126133812557401122953030695509876185592917323138313818881164334490044163316692588337720342646339764174333821950301279825316497898035760524780198230860089280791887363472060435443944632303774987556026740232641561706904946900169858650106994947597642013168757868017723456208796677559254390940651802333382820063200360490892131573853635471525711894510477078934343423255983)
enc = 275574424285842306309073814038154403551700455145115884031072340378743712325975683329051874910297915882286569143815715537085387363420246497061870251520240399514896001311724695996978111559476733709139080970977190150345474341853495386364275702356438666152069791355990718058189043717952080875207858163490627801836274404446661613239167700736337269924479349700031535265765885064606399858172168036794462235707003475360358004643720927563261787867952228496769300443415094124132722170498229611285689671203272698693505808912907778910378274197503048226322090611405601517624884408718689404556983397217070272851442351897456769883
m = 4
r = 10728
s = 14071
q, p, a = Int('q'),Int('p'), Int('a')
x = Solver()
X = Solver()
x.add(p == a**4 + r,p!=11235582092889474423308157442431404585112356118389416079589380072358292237898924588070954999848259773160425958203581538461317090246337386255727773235434895378018937800439471787035136670318969205937318158597045481305358734623849872523867127716771405667852889448960846131787527487246303505058576263156632644169, a >= 57896044618658097711785492504343953926634992332820282019728792003956564819968,a <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)
X.add(q == a**4 + s,a >= 57896044618658097711785492504343953926634992332820282019728792003956564819968,a <= 115792089237316195423570985008687907853269984665640564039457584007913129639935)

while True:
    try :
        while True:
            if x.check() == sat:
                A = x.model()
                if not isPrime(A[p].as_long()):
                    x.add(p != A[p].as_long())
                else:
                    p = A[p].as_long()
                    break
            else:
                print("no solution")
                break      
        print("p = ",p)

        while True:
            if X.check() == sat:
                B = X.model()
                if (not isPrime(B[q].as_long())) or (p*B[q].as_long() != pkey[1]):
                    X.add(q != B[q].as_long())
                else:
                    q = B[q].as_long()
                    break
            else:
                print("no solution")
                assert p*q == pkey[1]
        print("q = ",q)
        phi = (p-1)*(q-1)
        e = pkey[0]
        d = pow(e,-1,phi)
        print(l2b(pow(enc,d,pkey[1])))
        break
    except:
        print("Incorrect")
        x.add(p != A[p].as_long() , p != B[q].as_long())
        X.add(q != A[p].as_long() , q != B[q].as_long())
