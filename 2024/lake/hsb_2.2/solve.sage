from pwn import *
from Crypto.Util.number import long_to_bytes as l2b, bytes_to_long as b2l

## Precalculated values
p1 = b'1'*253
p1 = b2l(p1)
p2 = b'2'*253
p2 = b2l(p2)
p3 = b'3'*253
p3 = b2l(p3)
p4 = b'4'*253
p4 = b2l(p4)
p5 = b'9'*253
p5 = b2l(p5)
sav1 = 0x
sav2 = 0x
sav3 = 0x
sav4 = 0x
sav5 = 0x


TYPE_USER = b"\x01"
TYPE_INTERNAL = b"\x02"

io = remote('chall.polygl0ts.ch', 9067)

io.recvuntil(b'Enter selected option: ')
io.sendline(str(2).encode())
io.recvuntil(b'Enter selected option: ')
io.sendline(str(6).encode())
io.recvline()
c = int(io.recvline().strip().decode()[12:])

### Retrive modulus

io.recvuntil(b'Enter selected option: ')
io.sendline(str(4).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(p1).encode())
c1 = int(io.recvline().strip().decode()[12:])

io.recvuntil(b'Enter selected option: ')
io.sendline(str(4).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(p2).encode())
c2 = int(io.recvline().strip().decode()[12:])

io.recvuntil(b'Enter selected option: ')
io.sendline(str(4).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(p3).encode())
c3 = int(io.recvline().strip().decode()[12:])

io.recvuntil(b'Enter selected option: ')
io.sendline(str(4).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(p4).encode())
c4 = int(io.recvline().strip().decode()[12:])

io.recvuntil(b'Enter selected option: ')
io.sendline(str(4).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(p5).encode())
c5 = int(io.recvline().strip().decode()[12:])

e = 65537
print("Recovering gcd...")

n = gcd(sav5-c5,gcd(sav4-c4,gcd(sav3-c3,gcd(sav1-c1,sav2-c2))))
print(n)
assert len(l2b(n)) == 256

inv = pow(pow(2,e,n),-1,n)
craft = (c*inv)%n
io.recvuntil(b'Enter selected option: ')
io.sendline(str(5).encode())
io.recvline()
io.recvuntil(b'input 0: ')
io.sendline(str(craft).encode())
io.interactive()