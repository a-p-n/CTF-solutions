from pwn import remote
from Crypto.Util.number import GCD

p = 171687271187362402858253153317226779412519708415758861260173615154794651529095285554559087769129718750696204276854381696836947720354758929262422945910586370154930700427498878225153794722572909742395687687136063410003254320613429926120729809300639276228416026933793038009939497928563523775713932771366072739767

r = remote('chall.lac.tf', 31179)
r.recvuntil(b's: ')
ss = eval(r.recvline().strip().decode())[::-1]
r.recvuntil(b'alpha*s: ')
alphas = eval(r.recvline().strip().decode())
r.recvuntil(b'target polynomial: ')
target = eval(r.recvline().strip().decode())
r.sendlineafter(b"f(s) > ", b"2")
r.sendlineafter(b"h(s) > ", b"2")
r.sendlineafter(b"f(alpha * s) > ", str(p-2).encode())
r.recvuntil(b"target was ")
ts = int(r.recvline().strip().decode())
print(f"ss = {ss}\nalphas = {alphas}\ntarget = {target}\nts = {ts}")
gts = 1
for i in range(7):
    gts *= pow(ss[i], target[i], p)
    gts %= p
print(f"gts = {gts}, gcd = {GCD(ts, p-1)}")

ss = [143090655380564281020027582319778290821094211670628296961888614640684888113377860471481585339720918118962089960039531433277745471840259319226185233054326230367959309725121177087427912844865385530050454240134557265253420063253295877789833272820278876628256630996833187741066614276659101322272964287058082254781, 45597359196405599497255557620884015643890304901476307855816099917040479283480543697902512411696670991801860210970135499808516964025298866137617144120001371187430611771382775166531614838735646947681558581039512096587074646009307945337161187554536725655937809444037384785214790164881187682346950693209899156958, 100987703502002788526672671395328228554083216417122807174434834265365564199421159161675603807017353033132562332988946149954767819401743546241549468843446461251694424103480426233893448627396038109071545893564386106182958323767481185618736099636262170820527072829373150629140888115425466270076421538711138884310, 125895798322951000610585533106538337048114590638065201259693172834830321957424967351058405844087667883461238446685878197352800918092589872146339895670125925391322409721314594326691114709701413056795366100626376903931113941763167468820820138550590000338690607379876444839872322782715505538036377103140616220518, 108779260458934852731266405360279768673568410917890491770330359907710270775276454752943174668427806248276018722426202819538405973641835208549570169893930152947764882643342436525298809425321332920753209398496103623809758313616089547757784636375067316285678641553342643208215821945030069965894656032367870439676, 100028878438350011892407811813192901797319969850646869396648762100630796642366987530230641674482732959802549323053317050098336693439591586639509274617655004061964242956757913232319517726020757833603212730112076840614489901177620622788448312366514863009771505854186081280140804030477050781038323546374994676534, 104678070262075521570820108392755784158339195427263459810036854597334717238546239827763590266641657089570027608915360317987324292955083391588480622795106550756939679859267443756870554047513091678190214389467394758459686653156316865354007540801884176007152027459727269429700980230200414050507867300520682082944]
alphas = [161130868031677505021069743377519405353376467456367904920549192672283793300393145613538415474845663648062909185741445981583264901865042504188165257117911294042301303979033445745589957473546164891149918853491360715703210569749700747864533941093815183491922598678954590832933739955152997878583787902512092412376, 38263599076482964062848192262315508144204067078669832069770483561960513355326955553733714543699745318595764117319416837338164579642300970235933080279150462229758105579045873844520900774232622769534866302356523071395900885787836649485192794169820742271361028121300589666885730946290044722935203189285722229513, 66586195835229837010574401946531527467520313504841908569630466272852070880650398089469973466904091527132077044535007807665464938917414263913980979598155579106791281304736830321799307928593166325269579152276186362415796589810479320103711238325135584260218900378534486319181938183772494494515719465390354469158, 7453356508313157194034500394903656502195712936703712089610380770666171294567518407124683794713621359963431019628894686382952781439364353578569077027086627284406019996367409567628309042530587975387930870569662839407030685195458947502070821265951840282685608147737930904579130509358214239339139090336687910148, 99017774994353929622638868312346898078741449103917698153300119449404077679730565254051770470301717762468684976300352133446737893978897715854145232654262468359306781830389931299837013782462232690294095397115911817863987563154849728369366098060984876143564681908820669540551315499695982531016471862171344546109, 23440347073465088421729803128505416439832104299207646119351142661668740545293974154913741956114687371308294604097981061830590440794105248462631640234077285723322514483480640998310273693970504588978352105579939685016129448334439741544177283963372092364801626697662071388799372790093603742141642552411412286252, 80552625122797817669165373564038584543917501143659204139898325424449447225143619122874358548057858060906730373772259020128356568226907881831209085750313732655412865997596997852154257867247707709604429424969109901942206838950350503080912915124847293781570206591523256580237335057870669099982262836908757077489]
target = [32836935526439286992232486837264894699633660346530981047679204516888775345388542170780981127398696746744694148915093031273756539582693113192921058288064307000271776861643111655101753040570935867898600623127657930304622053444720861349229921358804513732452100790865514736749814344992124876251782555312503265517, 39503097363338011115187469054024389111508974588180691812991242502345013803237198390855254737112621366853962911604333807927830308797333820950961917201686232278326824194615144372742370544764888280137684862794953897387518524644850091844092110881169664120812192486933034083659113900933933517881847395757888141280, 5240279380106217135576021487610896203475218216736214687498530446905760372499668737410144065886847981705150876786383209556098960831409556403729834442469970095232836391168540005341749138687476176038796357894892944466310759010276048968414142401869286341213574953522106241272948412260228108796788734078822840151, 138231967424540041354911377058459741607458425210748750392270740059362847360375661856862821140416819592419314665727311049205717363196360675005080826705020053058522583441221400264205563857954673222717085076266517966513776393175591004997570966049702138200934072849817156951536272354500600014971509892107127337491, 90933284460598971854486176649013970752176719855888070544083239424446310768324051547190545686109295465410698597714537329850242796919894634912443535437312951599034965616599298170307447883139432500391201109994483118484864128919063754176795892037120424381871705105738161637532150080478988972190926663470757148323, 134373410120938262943954136808605817818007180247518301941548880888549349774433551130735315836887659228207628408513921668886524841771297944470217123796155921094924833225293726343918419021827167767189101767996423412951443554385920229132939801089652598392117121677702231558060316087837463107761948154405456335984, 19499953674112275795706361890681330100864326023341673766543903148201870634634365220840112500993595508245110313831749070383423346634671375483542282568128231019203983015201866046089654636226089468984649602556594193233755642468695376786589598011210473413917247167250692180604633383660019895509884196426582122655, 17408893637579841406447485127481997613121806537300561968321415841464118890085269560777214128295509857642645960856900573528788838675453523659614320523056788835666494295488748977905742993170108215733752225572561542571655518177085657999885578103196020637214895561658861570579336259179311968057443499174041141271]
ts = 2374993480679398765662899296126381596802584712050098390630957838484231327614354774248537294520337573260169076231227323542935869487538062115051107646094583521150827799087798963793819993861980177060949278768507900915751170370828444042571133741375592354962622025370549198904872893022995075533576218996298403262

r.recvuntil(b"target polynomial: ")
target = eval(r.recvline().strip().decode())
r.sendlineafter(b"f(s) > ", b"2")
r.sendlineafter(b"h(s) > ", b"2")
r.sendlineafter(b"f(alpha * s) > ", str(p-2).encode())
r.recvall()
r.close()
