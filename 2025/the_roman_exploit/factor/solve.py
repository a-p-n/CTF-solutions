from pwn import remote
from Crypto.Util.number import GCD, long_to_bytes, isPrime

# con = remote('factor.ctf.theromanxpl0.it', 7003)
# N, e, c = [], [], []

# for i in range(100):
#     N.append(int(con.recvline()[4:].strip()))
#     e.append(int(con.recvline()[4:].strip()))
#     c.append(int(con.recvline()[4:].strip()))
#     con.sendlineafter(b"Do you want to see another encryption? (yes/no): ", b"yes")

# with open("out.txt", "w") as f:
#     f.write(str(N) + "\n" + str(e) + "\n" + str(c) + "\n")

# for i in range(len(N)):
#     for j in range(i + 1, len(N)):
#         if GCD(N[i], N[j]) != 1:
#             print(i, j)

with open("out.txt", "r") as f:
    N = eval(f.readline())
    e = eval(f.readline())
    c = eval(f.readline())

# print(GCD(N[36], N[91]), N[36]//GCD(N[36], N[91]), N[91]//GCD(N[36], N[91]))


for p in range(2, 100000):
    if isPrime(p):
        for N1 in N:
            if N1 % p == 0:
                print(p, N1//p)
                break