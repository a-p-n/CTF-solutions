import random
from pwn import *
from Crypto.Util.number import long_to_bytes
from numpy import array
from string import printable

class Sample:
    def __init__(self, key: bytes, n_registers: int = 128):
        self.key = key
        self.n_registers = n_registers
    
    def prepare(self):
        self.registers = [0 for _ in range(self.n_registers)]
        self.key_extension(self.key)
        self.initial = self.registers.copy()
        self.carry = self.registers.pop()
        self.key_initialisation((2**14)+1280)

    def key_extension(self, key: bytes):
        if len(key) != 32:
            raise ValueError(f"Key length should be 32 bytes.")
        
        for i in range(len(self.registers)):
            j = (4 * i) % 32
            subkey = key[j : j + 4]
            self.registers[i] = int.from_bytes(subkey, "big")
    
    def key_initialisation(self, F: int):
        for _ in range(F):
            self.update()
            if _ >= 2**14:
                for i in self.initial:
                    if i == self.registers[-1]:
                        flag_part = long_to_bytes(i)
                        print("Flag part:",flag_part)
                        block_num = key_list.index(flag_part)
                        print("Flag block:",block_num)
                        byte_num = random.randint(0, 3)
                        ind = (_)-(2**14)
                        byte_num = flag_part.decode().index(chr(xored[ind]))
                        print("Byte:", byte_num)
                        print("Found:", ind)
                        og_key[block_num][byte_num] = chr(xored_og[ind])
                        print("Key:", og_key)
                        print("-"*50)
                        break
                        
    
    def shift(self):
        self.registers = self.registers[1:]
    
    def update(self):
        r0, r1, r2, r3 = self.registers[:4]
        
        self.carry ^= r1 if r2 > r3 else (r1 ^ 0xFFFFFFFF)
        
        self.shift()
        self.registers.append(self.registers[-1] ^ self.carry)


if __name__ == "__main__":
    random.seed(1234)
    plaintext = "2333af24e991824fa2da9a9f9f7c2c4543198b2464fb2ff6e3e5ab2de2ac8fb5c71410793a240fba232be4f1d9c7485184339a68dba523df04e1344f0a91ad2ca48eab442b5fc61e84994e7fddded61be4762e22200953b26b8c240497fe1f0de02e6b408bf84d232184b4587e246319db27e995fc83e7ee3a046981ae3f6b25740cb8ce7fede5ebbb3994ddda90fb8ca77187af9f5eb6e946b24e7b90d02ce206fbe15c0753a9554f272144bf632ba11c8607fe141bfe94fe3f5d27df0efbb7a9f9e51263b55f42369188dc927ef7aa31eb9fea851ddfefbc4079a4534712511566e4e205f19df1d1d5fa76fab6b278ada8f723eacaac2979e299fd904854b0bfa75ef62651b6ea2eeaf4a9effe4374517bfa7c92be2948c4618ec24aeadb4f963d915b1a97946b6d48c33deebf6c99ef3a06a48f61e8efa4b17cc162afad3196ffbfcffc32b72fdd479f60496e82cdef6eead9ba844ef493712209cfeae8824101b77b61364186625630e23117776a8220d216c6ceec327df0b82a7766abffbf00ccc20623a699c48abd9e7abfa7613dfa260a0d864ad12621e12d02580e80c3c8b1e15a93ed34a03b8e22d85bc5cff3babd23754bfca0631bd4b9662e222094157d6ae6b58760509a123145d0e52a4a083e1f9711768fd3524deb7aeb02647a717cc31f46a573e028f06ba046a1a99e85504e0dd50f7219556b0b00b1d111d4b14df51a72c981735e2cfbe89dbb08a7e0a4f0edab2f734ff48ad4aa263deef98f25880d03c71aa3e5abcbdc1e10fb84c7a7736e4bf4ddf8ed083a0aa7780b064ada1ae58f3bd49641c11806d859f53b64e618da5aa9e4c8484d4ebd23006e4124c75115e4bdd60bb75d7eb2332417421f46547aadb4e87f3cb4f337f9ca945903dab4e7f541a999ef0f8ba2bf9fd182a26dc2cb5d4d2706ba7ee848ed0922630c6f4f9c5934e3244f4580774e76b20d404d835193aea07c5598f26d9c6615abc56b7b64dc1609a243e8b17c5f2e50727462aae88ef54cea59de84bddf02fd1526115372bf5c0523881f28cff380219b2abf2f17bfbb1e26466e51c6e7b082dbd3ac8b3974aae158e58f5f0812f65bd52a648568dbbce8e59e24c7ad02e10d71327765a0e04a291ad67689965f4c4a0c3048c3a6dc18acf4cc5ac31d1f3a9efadd7439db0fa46e36a49c4bd084fe17477fc197cf1468da71b703dedca1e5273b06d8bf7ada4309333ed1743b072af49ba7ed467d402c471cb8fa8ecd584aae0c5df666710fc8c7387af81f5ceb9ad615dc166b93f69fafab3e23f5c8098c1549b5add31d65ce744149c3441708b004a2363d1a9f93208483b81ef460e884b19f8e2a095730ced870d1e51557c24057a0dd0112416bb8c07aa89f87de5fb95a25d00aa8ed1473781ea527f9f0fc3ddd5be91639dcd8221affab873c32b03dd74bd53bc7ad0c295f7408fdc608c6762ea0ca428b016d4d98069437f03b4f50782792f5963200eb01e10cb63998f4be731c1eb6895f37ac6514ee30e415de6c55b438ec6a63aa1427019cac0c0ffeebdc92418b151a637e33e3734f4570a97066a050d73051b95052087edac40ef20588153acc7f5061bd5e43b03111806f131190502a8044869f8c98ac482ce205694eebe4eeb308864010c61d46d4ec4579b716cfcdb5159a34f862592fad99bd0ce3cf05860628206036d835fcb81902458225d8c3c11fc262b2d7ea87c27f5221911b88249e2bbbdc40744f17edc32821627167ee6663edc192b76423272619844c1f521474b5b20d7edbee76cf25e3594b"
    ciphertext = "27bac634feab92a04de061cb1b1f4bd7253f6897f0042f0908a1cacaed8dbe84d41ce335405a6af7a12bd15db820509870460887cb9f333014dbd7e5680b3abe2457bf08bf5f391e4e32d098d516e72a087e22916e773611ff8ccfbe0919e83b135dfd5064d6a2cc36aa4f0dfab8098a42ff0ad9977ce71135573f35d7431ad293145f1098cb12e34865070c21c499e9255bbe90849fba8536c13638f2b4bb89a335fdff84ac5655a462880ff1e161a9fb9ee036e8c3df633c8ccf1e245b9ad204c61d2d9b9f4b29bbe40f76e9e59fc654da7c4e061d20efb3040c1030c467a61d81ebd4e2c08ef9dd886959fee3d0e1ca96f71cd3f440bbe33b72b006e3de123adbdebab4142c0dd9dd0f208611ab4d879415ac96eaa269c0eb182db197ba14ea3d91a41a68a1c00950c4a4792ce1106990673fe70d68367a468f8d0f81842186c66920d9b6fd272e0b0d5aaa2ae0a877af120f7cad5a60f6a936bb9151be21c483d6c9f762259e958b3c9658f86053abcf3dd025725551fc26acb9ed4048a32b003c78af6f3ae2ab82a579728840ac350dd5b943f8ffd93ec6fdb1af980ea9d8f7b6c8490163411dd48a5f4853f8929e835e98f1d095ce393df5b181c92a0173329ece8f19e3875f441e44d33f0a05a5e72e308b550dea817b41851c25e1c7f871b6906a0a140d55df178c57704664408d5cec63ece0621ad414a8794ed1ee1ef5d6ed37115f12fdd254af6cf92d9ac12e4f434cf8862e23ce65c445e3ebfe165fdedd87def6d74041398ebf06e0d9804e2f9c95ca74799557a198702418af80b531a06f2cbe55f94936ffe1ef46d333930e455e63460b333532fc3f23ff6eaa60a3490e782ab89b3cdb3d2cafb27ce7c667a372b5b38c0215b4da2c38de0628704ca4c276cfa195b362b259fbd94a1a9d9eae6e6f5e2f1ea271204b23282a5ebff3ccfd05b71ccff41333f1333cbaeaa74a19c9534531199b845106639915bf96f79c7fba816432c99f1a1d3a46c30dad43a20f69272f6b982651451ee96c7a5278bc713dd60de1d564eecbb71e470c44cea45550ab272da97e97c24c3b5c27f4b028543136f950d38bd4b5021961367e05e3fd48339b67cab95ec46cbbc3927f0b9a5fe0456c79319215f1ccc2c061df5fec5d9885c859e65d032421d60a8b54e6d63b8ed1990b070e652bd1638e2dee51e15dfb87f48558ebe4c0e596ee0ade3bf2f68eddeed4e0d5ff52e82e8af4aff55e759e338a3d4fc72db725d00a8a5dc332e5ad4dbb4d8de0f8542391a583cc15e9e201930d2fefd8b1aa90f13c8f606bf911f1a100c95919c666ffa8e355fece900d7c37ab93a8f1ce7cbd0e868757c9adc18b50c087e7166320d25fd3d5d5e6f5a65dbb198da0a225bddd2701a3d0fa03795f3d0671ad2fe1ec99aa4ed59c907d58bbb571658c938fb4b0c2285f91a52080684033057e809283e48ae04369e3309d8abdaff518a5e02c614097c8ab0ed54436f42702403a7cce56c40f73164191af15b443e3193c57a4a20cf632c7e32f12f6775c8f94a4eb13987db702caf3419effe95d6354acf7f6568f99af04b2d74a25c73e7af5522b0a8974802866a045543439c2c19ad5c79bafe07de125976f5bfd0f848ff12ba88348eb4effa09b116b073118cefa5ee3f48871402b7cae368f39b607920db1b57dd96588bf7004426eb9f5a558071f0a9bfd457def74a0d9e7a4fa265963c52d5ad0af9917c4b64ed01042da09990c3b27e9350e0313878967934f9aaf7c3f41b38dde820c5ad63f3174f991cb2899dfc5622c43"
    pt = bytes.fromhex(plaintext)
    ct = bytes.fromhex(ciphertext)
    xored = xor(pt, ct)
    
    plaintext_og = "144f3fe104f33fb1db5cd69e1cc18ceb6abbb2424bbd7ed83835d6c4af215ab9865379bf361f8c145689fa7cfa1c8a0c0254f0ef9fefb9559c45e2550d90de096e6b390280009763416f43b1c52005009f499d5c221f7b7b32f9f1f766b8057d5daf1d46a9e6547b2b655df872312a155a24f3ce66a08455006d54dcb3fea2b692010892d63503009904505d729e4b06784347d9d8f097352b73e98129122f59e62886527326022a529b58fcfe2a038b54053cc57123032aba5356e20641fba1ae9bd5398916e29cd2ec2ad01dad60ab2f4b3cbdc17afdfd5f777ac341c0a94581fc1f87782103ab61137f24b605266b8d20a2b295fee2819ce56b4436b7e106e613c6f3a6fcb2f9417b34bbec90874701b4a9402afb242ceab4c7f873a95537334b8ccab122a6dd46fcd818a11b65f3e37863ec1c27c5f832ab3e8c42a26db4d5d6362deb9af2d736390722d28c0e809f0f58b6f3cb079b64f22eeb4a4fe56307b5f4829f218afd7a13e9d1a7f3bcc4dfee5d83d4600c6c1cf69530a3413568a31251e533c9be324e7bb7b977dce081f82793001457f17383a58d8eb8f7dfc72c67f7ca0ac952257e5bf5881255564867ab8e8198c314309e211dd3d29b88d206c6111ca98aa9bf1f7c8ae2ebbd6fa1f73229b349c76bccc1c0e3460bcb350c06efac3d1503273da0f388e35fc7e4d8e22bcbe5204d7e3c05019689957b80d28bdcf4ff3536a640c0aca822e0943e559c7e5bc475aebc4459f55e95e0972e76d2ca23a7e5dd5e9762bc360dbfed8c2459cc54d5f1825dec6a0ef09de00bc6b9e87d8b8bfeca3722de36116cb549d7b45d4b7ee72af3c9d78e8358e33b2aa0ce3f91380da77cfc32d9e3f635703519da183aefe078dda73fc450b8cc899a4f90cee20597a5be5eec67e98f69f9801b6063d77c270c821ae71e1fb16a1fe66c68fc39d3c1ff75e1d78a2a42cc0bd737b90d6c22ada2e1ef041094adb7c341cb228d2b5f353bef801a9ac657274196ef91212c310eb41b6e7aa6c03178d3c8796731bfe41e54ee2092d5ae85679e77d2872761bf6001aefe68c83ea4b1968af3ab81de5fbe163eddb86a84efcdcb7cd77a335b1ebd75a6b2b913c6f579b4e80c21321cdc53bc5753d3d6f446d5cecc962c6f308ae80441026378a0556b49a40d62a500839197ae7b44a8595dee3b9ec358a495c73009d82f948b560a41fcad13530f81fe94604e1f95fd9fc47b0e94f1693f28aa470eb07f1f1ce73c40a818c517a9af0eb8b655e8de065b791291d1be9c3d4ead2aca027e4303f04650a6a812d156711dd29d54a8b84362e3d186c1ffee12c72e9a907c41b1963ab30d02dffbaf04e2c8d5fc383f8d469ae708fd91730db423a2a6d4eb6503b74923c04d754f190ab7bee78a53540a82e7b98260d84ac0159ff2759a0cbce70885a9ee46e0ed88091d1ed93146e916be84b28bb0a5e808684769d68fd7f392952d1a6d3b5a858eef6411abe859cb6a78a16d8f269a8d17d8bf81782695b3f41f15e90d03b0103c7e2ee3010db34b699f1354d9a3ecf3a1f7da0e510af3301f76dad2f180d75368f6fee0c673c3d20a6b02efd33c742a2cdaafa1365e797652816a2a443fff8efff3ff761b235b5959ee0cbbc22f56fbb1f8869e048760a3d5fcc17fd12433b9e3721e2197d703ae7d3a4c01a9e370541a9963190d63d4390697c65d1f5f4bb33b4237c1a08ef6503f4d6fae907b71fbd528668ca3eeb6dfd3a6421675cfc973e398f671f35f0194e3ac69bfbef73dd29af81fe3249ba829af79bb3ea26808512f"
    ciphertext_og = "3810d227b7ca7cb8cc9afa35679e154b763623db53428127a858c5c75e199088883d9b94bb4b4cbd3276e3c2e9d132832067362974d6e4a3898376003da1aba9ece6ff649800979c58d450216dc4cfce6e427f7736b444afd5f9ac548ad40f0d510ff07f43051772678671adf691e47b46c04c577e5f7baae92c070e9d660dbcd291b055dc47026e845bdcbe5e357bc8a9bc205223ee16a440d3883d1976a569341917791426022a3dc7f4d1ea77c47e1637842194c72344f187dad900146a6fd110254d79160faca1dfb4856636153abe7aad92a685fdfd49e5f91124a7d0b1d331eef772ef0dc4b34c0caf4950e90dee3e17c6f21f82def29752edf0f39d596b8be79598a069954b6018e4fe90347c7342be34d5afb6143987d5c139f47118ab4b8c354e22bf99c06fc4812b8a16ac782d0d8869b6478a12c5eca731bee0423d12bbd218aacadd1bed74e446c8c1b1fcee577b6bf9eaab0ae9e842b4ddb63c7517d02b599af3918fe741434a35f00052e7b64740dc4a33bd3b78a1cdcc8abc441247b99fe2dbfdd8eaa92adfc715b3e52d8e2b0003c9783e6878d1c783950ad71307076a699ee9eba4bf2a84a1e217146f1ac51c5867a24c533d426f9820ea0c2251339034d02fee4422d1067b842aaa0b3cc7dd831002bef262d4e8faa42762104a836928cc969862372e55b7eeeac22029ba3d89c2ca26aab75dc47b802d6d4e8d936b962ad1f3f3c9769b0f4df5804f9d5d7410ef1b2acc1d6a0baea376c5be0f0d29296b5a7a9308ae0aee82d0756cdc13bbd67c3cab525cc26d93469646821b2882954576b7c3bc5ef2ad65c65c41764727c875113bde86b55fd5a0ce9d03419d39dc895f12719289e16a6aeacab7cf70d52144a41562f2018d84a2cf0242e861a926f1194ab6fc52f93ba20400a302b621b014125e1cbf7105284c62b71249a624a179d728b811e7258a0fb3ec03c163c195fd697ea5ed63db4134dde26a15a5a589f5ba51f5db8cd0a76500a3a111610988cfdaf8de3e7823d66e0afa2df62788b359989e0e88a36733bce1adf3730d6b581453273cb38abade61939bc5316ad76268759ff43c5f5ebac24358f08fdbbbc826e66e6dc5e0c77adeef8db54453435745709c9bd875a85da5e0a939c69c2805cdf8f8a05ae0d1456d5269a045a86a05fd2be3f92ef217cb0c3e95f8f390cfd8c5779ba0468768164c23c59a193dee0af396ba58e816e369bb3d56b8b428048832d23c1288e025bafa380750e803260a65b97f359811643563c3d04e717765f79ce3f11340eb6931c3e3ce71852d1c9b9c2acba4107329cb407ee7232256567c0d3a2a03a4cb9675c8b40e907705c5552c8e4cea4f57759171c2cd4de2c96c9b8071aa26976028d76b365b48a85c1a7ebf5eeb7714126ae93fae26ac69ce1eacc928669e6f88171f1288668f0d146f2265787224cfdfddaef239286c68bbc54702763d72239b77b9d84807a01717b7d6791838381c2c753a008f4eb52ceb289eb979e184c426e8d76fe8d0d1f55d74ecd1593019f94956757f91c3b76f057153ba720bc1caa7d1285397e0bac4aa12635864186f67d376bb8527910f2df0a12c0d0d50952e763b74f06ec033e3ddde9430531953def2f400604ea5eb1d5be2cbf3dfaec238ca2efe5b73c6cabbf017d73582d3f712c67debd8d5f2509bb6dab20897150b4549c44bb33ba4768bcf9290360f7ecf3ba988d3ab20ca4d0028e81d4e1d7770ed4734d76472eb9b630515553be84dfa4ad8c6f200ab098e5709966cc659938082a2955cd740"
    pt_og = bytes.fromhex(plaintext_og)
    ct_og = bytes.fromhex(ciphertext_og)
    xored_og = xor(pt_og, ct_og)

    sample_key = array([["0" for _ in range(4)] for _ in range(8)])
    og_key = array([["0" for _ in range(4)] for _ in range(8)])
    key = b"DUCTF{abcdefghijklmnopqrstuvwxy}"
    key_list = [key[i:i+4] for i in range(0, len(key), 4)]
    sample = Sample(key)
    sample.prepare()
    print(og_key)
    for i in og_key:
        for j in i:
            if j not in printable:
                print(chr(ord(j)^0xFF),end = "")
            else:
                print(j,end = "")
    print()




    
