from Crypto.Util.number import getPrime, bytes_to_long

p,q = getPrime(512), getPrime(512)
N = p*q
e = 65537

flag = b"TRX{??????????????????????}"
print(f"n = {N}")
print(f"e = {e}")
print(f"c = {pow(bytes_to_long(flag), e, N)}")
print(f"leak = {(0x1337 + p + q) ^ (0x1337 * p * q) & (p | 0x1337137)}")

# n = 48512240641840864698611285212880546891958282812678323164929695497979837667167371835079321738954614199887328209689700722900739026689495649897348371742808386272023319885638291436983171905959746612916786515990301081029893115996145232044829058978974408602308231813736063857659634459438506076453437963441215520733
# e = 65537
# c = 36547163254202175014719011914255607837474386170093760562818795855485895858656825454299902190817728613275689042837518944064285193789095094235166256812740012490802514031578972372211469389293445265540278842152695415520550436223647424764618861869589597420855316641231834238167223742740134122313062024294807514651
# leak = 20826963965199127684756501660137785826786703139116744934461978331055754408584988351275721454251225474905754748284336808278049322016982012115699743632649066